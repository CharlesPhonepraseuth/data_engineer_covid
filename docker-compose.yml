version: '3.8'


services:

  postgres:
    container_name: pg_container
    image: postgres
    build: ./docker/postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", '${POSTGRES_DB}']
      interval: 5s
      retries: 5
    restart: always
    ports:
      - ${POSTGRES_HTTP_PORT}:${POSTGRES_HTTP_PORT}
    networks:
      - lan


  pg-init-seeder:
    container_name: pg-init-seeder
    build:
      context: .
      dockerfile: ./docker/pg-init-seeder/Dockerfile
    volumes:
      - ./docker/pg-init-seeder/seeder.py:/app/seeder.py
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_HTTP_PORT=${POSTGRES_HTTP_PORT}
    networks:
      - lan
    depends_on:
      postgres:
        condition: service_healthy


  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - ${PGADMIN_HTTP_PORT}:80
    networks:
      - lan
    depends_on:
      postgres:
        condition: service_healthy


networks:
  lan:
